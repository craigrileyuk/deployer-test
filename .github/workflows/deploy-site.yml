name: deploy-site

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          WITH_V: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: none
          RELEASE_BRANCHES: main

    outputs:
      bump: ${{ steps.tag.outputs.part }}
      new_tag: ${{ steps.tag.outputs.new_tag }}

  build:
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.outputs.bump
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Bump version and push tag
        id: tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          WITH_V: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: none
          RELEASE_BRANCHES: main

      - name: Create npmrc file
        run: echo "${{ secrets.NPMRC_PRODUCTION }}" > .npmrc

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Build assets
        run: npm run prod:all

      - name: Create ZIP for release
        run: zip -r assets.zip ./public/build -x "*.DS_Store*" -x ".npmrc" -x "/*.mix.js" -x "node_modules/*" -x ".github/*" -x ".git/*" -x ".gitignore" -x "adminBuild/* -x tests/*"

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa-prod
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"
          config: |
            Host production
              Hostname ${{ secrets.SSH_HOST }}
              Port: ${{ secrets.SSH_PORT }}
              User ${{ secrets.SSH_USER }}
              IdentityFile ~/.ssh/id_rsa-prod

      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy with rsync
        run: rsync -avz assets.zip ${{ secrets.SSH_USER }}@production:/home/${{ secrets.SSH_USER }}/laravel/assets.zip

      - name: Run deployer script
        run: ssh production 'php deploy.php'
